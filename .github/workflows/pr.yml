name: Pull request

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths-ignore:
      - '**.md'
      - '**.xml'

jobs:
  build:
    name: Gradle Build
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_MAXSIZE: "10G"
      CCACHE_HARDLINK: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          cache: 'gradle'
          distribution: 'temurin'
          java-version: '21'
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ccache-stable
          restore-keys: ccache-stable
      - name: Set up Android SDK Tools
        uses: android-actions/setup-android@v3
        with:
          packages: "build-tools;36.0.0 ndk;27.2.12479018 platform-tools platforms;android-36"
      - name: Configure Android SDK Path
        run: |
          echo "sdk.dir=${ANDROID_HOME}" >> local.properties
      - name: Modify Gradle JVM Args
        run: |
          # Get system memory size in KB
          MEMORY_KB=$(grep MemTotal /proc/meminfo | awk '{print $2}')
          # Convert to GB
          MEMORY_GB=$((MEMORY_KB / 1024 / 1024))
          echo "Detected memory size: ${MEMORY_GB}GB"

          if [ $MEMORY_GB -ge 12 ]; then
            sed -i '/^org\.gradle\.jvmargs=/d' gradle.properties
            echo "org.gradle.jvmargs=-Xmx8G -XX:MaxMetaspaceSize=2G -XX:+UseParallelGC -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8" >> gradle.properties
          fi
          cat gradle.properties
      - name: Enable Optimization
        run: |
          sed -i 's/^-dontoptimize$/#-dontoptimize/' TMessagesProj/proguard-rules.pro
          echo "ProGuard optimization enabled for CI build"
          echo "Modified proguard-rules.pro:"
          grep -n "dontoptimize" TMessagesProj/proguard-rules.pro || echo "No dontoptimize rules found"
      - name: Debug Build
        run: |
          export LOCAL_PROPERTIES="${{ secrets.LOCAL_PROPERTIES }}"
          export DEBUG_BUILD=true
          sed -i 's/signingConfig signingConfigs.release//g' TMessagesProj/build.gradle
          ./gradlew TMessagesProj:assembleStaging

          APK=$(find TMessagesProj/build/outputs/apk -name '*arm64-v8a*.apk')
          APK=$(dirname $APK)
          echo "APK=$APK" >> $GITHUB_ENV
      - uses: actions/upload-artifact@v4
        with:
          name: Debug
          path: ${{ env.APK }}
